components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        phone:
          type: string
        email:
          type: string
          format: email
      example:
        id: 1
        phone: '6281999200555'
        email: 'fake@example.com'
        name: 'fake name'
        role: 'user'

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: time
      example:
        token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg'
        expires: 1618805979993

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object

  responses:
    MissingParameters:
      description: 'Missing required parameters'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 'fail'
            message: 'Password is required'
            data: { password: 'Password is required' }

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
